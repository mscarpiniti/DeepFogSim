%
%  ***********************************************************************
%  *                                                                     *
%  *             Dynamic Deep Fog Simulator - DynDeepFogSim              * 
%  *                                                                     *
%  * Authors: Enzo Baccarelli and Michele Scarpiniti                     *
%  * Last updating: September, mid, 2020                                 *
%  * Copyright: This simulator has been developed under the              *
%  *                                                                     *
%  * "SoFT" and "SoFT2" projects, Sapienza Projects, Bandi 2018 and 2019"*
%  *                                                                     *
%  * Current version: 4.0                                                *
%  ***********************************************************************
%
% The DynDeepFogSim script acts as the main program and graphic user interface
% of the overall simulator. The user sets 33 global variables, which work as 
% user-defined input parameters of the overall simulator.
% 
% DynDeppFogSim orderly calls the following main four functions:
%
% 1) Check_convexity, in order to test the strict convexity of the
% underlying resource-allocation optimization problem;
% 2) Check_feasibility, in order to check the strict feasibility of the
% underlying resource-allocation problem;
% 3) DynDeF_RAS (Dynamic Deeep-Fog Resource Allocation Solver), in order to
% numerically solve the underlying optimization problem; 
% 4) Static_Allocation, in order to compute the total, computation and 
% networking energies which would be wasted by the underlying Fog platform
% under the statically-assigned maximum allowed resource allocation vectors; and, 
% 5) DynDeFog_Tracker (Dynamic Deep-Fog Tracker), in order to numerically track the
% adaptive changes of the resource allocation performed by the DeF_RAS
% function when the size of the input data to be processed by the simulated
% multi-tier hierarchically organized networked Fog platform undergoes
% abrupt time variations.
%
% These five main functions call, in turn, the following two main 
% auxiliary functions:
%
% 1) twoDtooneD, in order to pass FROM the 2D row/column numbering of the 
%    Fog nodes of the simulated multi-tier hierarchically organized 
%    networked Fog platform TO the corresponding 1D lexicographically 
%    organized numbering; and,
% 2) oneDtotwoD, in order to pass FROM the 1D lexicographically 
%    organized numbering of the Fog nodes of the simulated multi-tier 
%    hierarchically organized networked Fog platform TO the corresponding 
%    2D row/column numbering.
%
% The overall output of each run of the DynDeepFogSim script is composed by 
% corresponding output generated by the DynDeF_RAS, Max_Energies and DynDeFog_Tracker 
% functions. Specifically,
% 
% 1)the output data produced by each run of the DynDeF_RAS function are stored
% by the following 14 global variables:
%
% f_mtx, (Q x I_MAX) matrix that stores the time-traces of the 
% Q = totalnodes 1D-indexed processing frequencies (bit/sec) of the
% convolutional processors equipping the simulated Fog nodes.These traces
% are displayed through colored plots from the GUI of DeepFogSim;
%
% ftilde_mtx, (Q x I_MAX) matrix that stores the time-traces of the 
% Q = totalnodes 1D-indexed processing frequencies (bit/sec) of the
% classifier processors equipping the simulated Fog nodes. These traces
% are displayed through colored plots from the GUI of DeepFogSim;
%
% R_mtx, ((M-1) x I_MAX) matrix that stores the time-traces of the 
% (M-1) inter-tier througpuths (bit/sec) of the Trasport-layer directed 
% connections linking the Fog nodes placed over two adjacent tiers.These 
% traces are displayed through colored plots from the GUI of DeepFogSim;
%
% lambda_mtx, (M x I_MAX) matrix that stores the time-traces of the 
% M Lagrange multipliers (Joule) associated to the M delay-constraints 
% on the maximum allowed per-tier execution 
% (e.g., computing-plus-networking) delays. These traces
% are displayed through colored plots from the GUI of DynDeepFogSim;
%
% E_TOT_vec, (1 x I_MAX) vector of the time-trace of the overall computing-
% plus-networking energy (Joule) wasted by the Fog platform under the 
% resource allocation performed by the DynDeF_RAS function.This trace
% is displayed through a colored plot from the GUI of DynDeepFogSim;
%
% E_COP_vec, (1 x I_MAX) vector of the time-trace of the computing
% energy (Joule) wasted by the Fog platform for perfoming the required 
% convolution and classifier operations required by the considered
% Conditional Deep Learning Machine (CDLM) under the 
% resource allocation performed by the DynDeF_RAS function. This trace
% is displayed through a colored plot from the GUI of DeepFogSim; and,
%
% E_NET_vec, (1 x I_MAX) vector of the time-trace of the networking
% energy (Joule) wasted by the Fog platform for sustaining the 
% iter-tier transport flows perfoming under the 
% resource allocation performed by the DynDeF_RAS function.This trace
% is displayed through a colored plot from the GUI of DynDeepFogSim;
%
% E_TOT_best, e.g., the last scalar component of E_TOT_vec, that is, 
% E_TOT_best = E_TOT_vec(I_MAX). It is displayed through a bar plot by the
% GUI of the DeepFogSim;
%
% E_COP_best, e.g., the last scalar component of E_COP_vec, that is, 
% E_COP_best = E_COP_vec(I_MAX). It is displayed through a bar plot by the
% GUI of the DeepFogSim;
%
% E_NET_best, e.g., the last scalar component of E_NET_vec, that is, 
% E_NET_best = E_NET_vec(I_MAX). It is displayed through a bar plot by the
% GUI of the DeepFogSim;
%
% f_best_vec, e.g., the transpose of the last column of f_mtx, that is, 
% f_best_vec = (f_mtx(:,I_MAX))'. It is displayed through dedicated bar 
% plots by the GUI of the DeepFogSim;
%
% ftilde_best_vec, e.g., the transpose of the last column of ftilde_mtx, 
% that is, ftilde_best_vec = (ftilde_mtx(:,I_MAX))'. It is displayed 
% through dedicated bar plots by the GUI of the DeepFogSim;
%
% R_best_vec, e.g., the transpose of the last column of R_mtx, that is, 
% R_best_vec = (R_mtx(:,I_MAX))'. It is displayed through dedicated bar 
% plots by the GUI of the DeepFogSim; and,
%
% perexit_dealy_ratios_vec, (1 x M) vector of the dimensionless ratios 
% between the perexit aggregate delays actually returned by the DeF_RAS 
% and their corresponding maximum tolerated values stored into the T_exit_vec
% The feasible values of these ratios must be <= 1. These ratios are
% displayes as bar plots;

% 2)the ouput data produced by each run of the Static_Allocation function are
% stored into the following three global scalar variables: E_TOT_MAX, E_COP_MAX
% and E_NET_MAX (Joule). They are displayed by the GUI through a bar plot;  

% 3)the output data produced by each run of the DeFog_Tracker function
% are stored by the following five global variables:
%
% E_TOT_TRACK_mtx, (3 x iter_number) matrix of the time-traces
% of the total computing-plus-networking energies (Joule) wasted under the
% resource allocations performed by the DeF_RAS function for the three
% values of the speed-factors stored by the a_max_vec_DeFogT vector. 
% These traces are displayed through colored plots from the 
% GUI of DeepFogSim;
%
%
% E_COP_TRACK_mtx, (3 x iter_number) matrix of the time-traces
% of the computing (e.g., convolutional-plus-classifier) energies (Joule) 
% wasted under the resource allocations performed by the DeF_RAS function
% for the three values of the speed-factors stored by
% the a_max_vec_DeFogT vector. These traces
% are displayed through colored plots from the GUI of DeepFogSim;
%
% E_NET_TRACK_mtx, (3 x iter_number) matrix of the time-traces
% of the computing networking energies (Joule) 
% wasted under the resource allocations performed by the DeF_RAS function
% for the three values of the speed-factors stored by
% the a_max_vec_DeFogT vector. These traces
% are displayed through colored plots from the GUI of DeepFogSim;
%
% lambda1_TRACK_mtx, (3 x iter_number) matrix of the time-traces
% of the FIRST Lagrange multiplier (Joule) under the resource allocations 
% performed by the DeF_RAS function for the three values of the 
% speed-factors stored by the a_max_vec_DeFogT vector. These traces
% are displayed through colored plots from the GUI of DeepFogSim;
% and,
%
% lambdaM_TRACK_mtx, (3 x iter_number) matrix of the time-traces
% of the LAST (e.g., M-th) Lagrange multiplier (Joule) under the 
% resource allocations performed by the DeF_RAS function for the three 
% values of the speed-factors stored by the a_max_vec_DeFogT vector. These 
% traces are displayed through colored plots from the GUI of DeepFogSim. 
%
%
% The main architectural assumptions about the simulated networked 
% Fog platform are as follows:
%
% 1) it is composed by M >= 2 hierachically-organized feedforward tiers,
% with the last tier#M being composed by a SINGLE Cloud node;
% 2) Fog nodes at tier#m, 1<= m <= M-1, are disposed along a row and 
% progressively numbered from left to right. Hence, the 2D numbering of 
% the Fog node at tier#m and column j is: Fog(j,m), 1 <= j <=
% pertiernodes_vec(m), where pertiernodes_vec(m) is the number of Fog
% nodes at tier#m, with pertiernodes_vec(M) = 1;
% 3) Fog nodes at tier#m may send (resp., receive) 
% data ONLY to (resp., from) Fog nodes at tier#(m+1), with 1<= m <= M-1 
% (resp.,(m-1), with 2 <= m <= M);
% 4) All the directed trasport-layer flows from Fog nodes at tier#m to Fog
% nodes at tier#(m+1) sustain a same troughput R(m), 1<= m <= (M-1)(bit/sec);
% Being the considered Fog platform developed for local IoT applications, the 
% inter-tier connections are assumed single-hop. Furthermore,due to the 
% hard delay constraints of the considered IoT environments, they are also
% UDP/IP based at the Transport/Network layers;
% 5) Given the 2D numbering Fog(j,m), the corresponding 1D equivalent 
% numbering id is: id = sum(pertiernodes_vec(1:m-1)) + j, 2<= m <= M, with
% id = j, for m =1. It is obtained by scanning the underlying Fog DAG from
% bottom to top and, at each row, from left to right;
% 6) Each Fog node (id), 1<= id <= Q = sum(pertiernodes_vec), at tier#m  
% is equipped with a convolutional processor working
% at the frequency: f(id) (bit/sec) and a classifier processor working at
% the frequency: ftilde(id) (bit/sec). Furthermore, it is equipped with 
% FanIN-vec(id) (resp.,FanOUT_vec(id)) input (resp., output) ports, each 
% port receiving (resp., transmitting) at R(m-1) (resp., R(m)) (bit/sec);
% 7) The time is slotted and T_s (sec) is the inter-sensing period. At 
% the beginning of each time slot, each Fog node at tier#1 receives a chunk
% of input data to be processed of size: V_0_vec(id) (bit), 
% 1<= id <= pertiernodes(1). Hence, the toal volume of data to be 
% processed by the Fog platform during eash T_s long time slot is
% V_0 = sum(V_0_vec) (bit);
% 8) During each time slot, the maximum computing-plus-networking delay 
% tolerated for the generation of a local exit at tier#m is costrained up
% to T_exit(m) (sec);  
% 9)The simulated Fog platform is employed for sustaining the inference 
% phase of an (already trained and optimized) assigned Conditional 
% Deep Neural Network. The CDNN is composed by L >= M feedfowrd layers,
% with already set local exits. The set of layers is assumed to be 
% already partitioned over the M tiers of the Fog platform in an orderly 
% (e.g., sequential-type) way. Tier#m of the Fog platform is equipped with
% a (single) local exit if and only if the corresponding subset of 
% sustained CDNN layers are equipped with at least one local exit;
% 10)The optimization variables of the underlying resource allocation 
% problem are: 
% - the set of the convolutional processor frequencies 
%   {f(id), 1<= id <= Q};
% - the set of the classifier processor frequencies 
%   {ftilde(id), 1<= id <= Q};
% - the set of the inter-tier throghputs 
%   {R(m), 1<= m <= M-1};
% 11)The objective function to be minimized is the total energy E_TOT 
% (Joule) consumed by the Fog platform during each period T_s. E_TOT is the
% summation of the overall computin energy E_COP and the overall networking
% energy E_NET; 
% 12)The M constraints of the optimization problem are on the allowed 
% pertier maximum execution delays and read as: 
% T_EXE(1,m) <= T_exit(m), 1<= m <= M, where T_EXE(1,m) is the actual delay
% fog generating a local exit at tier#m, while T_exit(m) is the
% corresponding tolerated maxinum value.
%13) The Fog platform is virtualiazed, so that each Fog node is equipped
% with a clone (e.g., Virtual Machine or Container) that is dedicated to 
% implement the operations required for sustaining the considered CDNN. A
% same Fog platform may simultaneoulsy host multiple sets of clones that 
% support in parallel the inferece phases of multiple CDNNs.  
% Hence, the reported E_TOT, E_COP and E_NET to be optimized refer 
% ONLY to the energies consumed by the clones that are utilized for 
% sustaining the considered SINGLE CDNN. 
%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Begin the DynDeepFogSim script
clear;
clc;
close all;

%--------------------------------------------------------------------------
fprintf('BEGIN the current run of DynDeepFogSim\n\n');

%--------------------------------------------------------------------------
fprintf('Setting the parameters....');
%
% Selecting the chosen Tree
%
Set_parameters_Tree_1;
% Set_parameters_Tree_2;
% Set_parameters_Tree_3;
% Set_parameters_Tree_4;
% Set_parameters_Tree_5;
% Set_parameters_Tree_6;
% Set_parameters_Tree_7;
% Set_parameters_Tree_8;
% Set_parameters_Tree_9;
% Set_parameters_Tree_10;
%
%--------------------------------------------------------------------------
% Selecting the Algorithms to run
STA = 1;   % Static Allocation Algorithm
FGT = 1;   % Fog Tracker
%
options = [STA, FGT];

                                                  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Begin the code of the VirtFogSim script
%
DynDeepFogSim_Run(options);
%
fprintf('END of simulations\n');
%
%----------END section of the result display of the script-----------------
%--------------------------------------------------------------------------
